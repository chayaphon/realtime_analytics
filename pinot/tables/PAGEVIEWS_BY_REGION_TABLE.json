{
    "REALTIME": {
      "tableName": "PAGEVIEWS_BY_REGION_TABLE_REALTIME",
      "tableType": "REALTIME",
      "segmentsConfig": {
        "schemaName": "PAGEVIEWS_BY_REGION_TABLE",
        "replication": "1",
        "replicasPerPartition": "1",
        "timeColumnName": "timestamp",
        "minimizeDataMovement": false
      },
      "tenants": {
        "broker": "DefaultTenant",
        "server": "DefaultTenant",
        "tagOverrideConfig": {}
      },
      "tableIndexConfig": {
        "streamConfigs": {
          "streamType": "kafka",
          "stream.kafka.topic.name": "PAGEVIEWS_BY_REGION_TABLE",
          "stream.kafka.broker.list": "kafka1:9092,kafka2:9092,kafka3:9092",
          "stream.kafka.consumer.type": "lowlevel",
          "stream.kafka.consumer.prop.auto.offset.reset": "smallest",
          "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
          "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.inputformat.avro.confluent.KafkaConfluentSchemaRegistryAvroMessageDecoder",
          "realtime.segment.flush.threshold.rows": "0",
          "realtime.segment.flush.threshold.time": "24h",
          "realtime.segment.flush.threshold.segment.size": "100M",
          "stream.kafka.decoder.prop.format": "AVRO",
          "stream.kafka.decoder.prop.schema.registry.rest.url": "http://schema-registry:8081"
        },
        "invertedIndexColumns": [],
        "noDictionaryColumns": [],
        "sortedColumn": [],
        "bloomFilterColumns": [],
        "loadMode": "MMAP",
        "onHeapDictionaryColumns": [],
        "varLengthDictionaryColumns": [],
        "enableDefaultStarTree": false,
        "enableDynamicStarTreeCreation": false,
        "aggregateMetrics": false,
        "nullHandlingEnabled": false,
        "optimizeDictionary": false,
        "optimizeDictionaryForMetrics": false,
        "noDictionarySizeRatioThreshold": 0,
        "rangeIndexColumns": [],
        "rangeIndexVersion": 2,
        "autoGeneratedInvertedIndex": false,
        "createInvertedIndexDuringSegmentGeneration": false
      },
      "metadata": {},
      "quota": {},
      "routing": {},
      "query": {},
      "ingestionConfig": {
        "rowTimeValueCheck": false,
        "segmentTimeValueCheck": true,
        "continueOnError": false
      },
      "isDimTable": false
    }
  }