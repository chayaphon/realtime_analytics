services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./volumes/zookeeper_data/data:/var/lib/zookeeper/data
      - ./volumes/zookeeper_data/log:/var/lib/zookeeper/log
    networks:
      analytics_network:
        ipv4_address: 172.90.1.100
    restart: unless-stopped

  kafka1:
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka1
    ports:
      - "9191:9191"
      - "9101:9101"
    depends_on:
      - zookeeper
    environment:
      KAFKA_HOSTNAME: kafka1
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9191,INTERNAL://kafka1:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_REPORTER_TOPIC_PARTITIONS: 5
    volumes:
      - ./volumes/kafka1_data/data:/var/lib/kafka/data
    networks:
      analytics_network:
        ipv4_address: 172.90.1.101
    restart: unless-stopped
  

  kafka2:
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka2
    ports:
      - "9192:9192"
      - "9102:9102"
    depends_on:
      - zookeeper
    environment:
      KAFKA_HOSTNAME: kafka2
      KAFKA_BROKER_ID: 2
      KAFKA_NODE_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9192,INTERNAL://kafka2:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9102
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_REPORTER_TOPIC_PARTITIONS: 5
    volumes:
      - ./volumes/kafka2_data/data:/var/lib/kafka/data
    networks:
      analytics_network:
        ipv4_address: 172.90.1.102
    restart: unless-stopped


  kafka3:
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka3
    ports:
      - "9193:9193"
      - "9103:9103"
    depends_on:
      - zookeeper
    environment:
      KAFKA_HOSTNAME: kafka3
      KAFKA_BROKER_ID: 3
      KAFKA_NODE_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9193,INTERNAL://kafka3:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9103
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_REPORTER_TOPIC_PARTITIONS: 5
    volumes:
      - ./volumes/kafka3_data/data:/var/lib/kafka/data
    networks:
      analytics_network:
        ipv4_address: 172.90.1.103
    restart: unless-stopped


  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka1
      - kafka2
      - kafka3 
      - schema-registry
      - kafka-connect
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./volumes/kafka-ui_data:/var/lib/kafka-ui/data
    networks:
      analytics_network:
        ipv4_address: 172.90.1.104
    restart: unless-stopped
      

  schema-registry:
    image: confluentinc/cp-schema-registry:7.7.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
    volumes:
      - ./volumes/schema-registry_data:/var/lib/schema-registry/data
    networks:
      analytics_network:
        ipv4_address: 172.90.1.105
    restart: unless-stopped


  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.7.1
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-group-configs
      CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-group-offsets
      CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-group-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/etc/kafka-connect/drivers"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - ./volumes/kafka-connect_data:/var/lib/connect/data
      - ./volumes/kafka-connect_data/confluent-hub-components:/usr/share/confluent-hub-components
      - ./volumes/kafka-connect_data/drivers/mysql-connector-j-8.1.0.jar:/usr/share/java/kafka/mysql-connector-j-8.1.0.jar
    #command: bash -c "confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.7.1 && /etc/confluent/docker/run"
    networks:
      analytics_network:
        ipv4_address: 172.90.1.106
    restart: unless-stopped


  control-center:
    image: confluentinc/cp-enterprise-control-center:7.7.1
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - schema-registry
      - kafka-connect
      - ksqldb-server
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'kafka-connect:8083'
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://172.16.1.100:8088" ### Please Change IP Address to Ksql Server. ###
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 3
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 3
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    volumes:
      - ./volumes/control-center_data:/var/lib/control-center/data
    networks:
      analytics_network:
        ipv4_address: 172.90.1.107
    restart: unless-stopped


  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.7.1
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - schema-registry
      - kafka-connect
    ports:
      - "8088:8088"
    environment:
      KSQL_HOST_NAME: ksqldb-server
      KSQL_CONFIG_DIR: "/etc/ksqldb"
      KSQL_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      KSQL_LISTENERS: "http://ksqldb-server:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://kafka-connect:8083"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
    volumes:
      - ./volumes/ksqldb_data:/var/lib/ksqldb/data
      - ./volumes/ksqldb_data/config:/etc/ksqldb
    networks:
      analytics_network:
        ipv4_address: 172.90.1.108
    restart: unless-stopped


  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.29.0
    container_name: ksqldb-cli
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - kafka-connect
      - ksqldb-server
    entrypoint: /bin/sh
    environment:
      LOG4J_CONFIGURATION: "file:/dev/null"
      KSQL_CONFIG_DIR: /etc/ksqldb
    tty: true
    volumes:
      - ./volumes/ksqldb-cli_data/config:/etc/ksqldb
      - ./volumes/ksqldb-cli_data/aggregate-count/src:/opt/app/src
      - ./volumes/ksqldb-cli_data/aggregate-count/test:/opt/app/test
    networks:
      analytics_network:
        ipv4_address: 172.90.1.109
    restart: unless-stopped


  ksql-datagen:
    image: confluentinc/ksqldb-examples:7.7.1
    hostname: ksql-datagen
    container_name: ksql-datagen
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - schema-registry
      - kafka-connect
      - ksqldb-server
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka1:9092 1 40 && \
                       echo Waiting for Confluent Schema Registry to be ready... && \
                       cub sr-ready schema-registry 8081 40 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 11 && \
                       tail -f /dev/null'"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      STREAMS_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
      STREAMS_SCHEMA_REGISTRY_PORT: 8081
    networks:
      analytics_network:
        ipv4_address: 172.90.1.110
    restart: unless-stopped


  pinot-controller:
    image: apachepinot/pinot:0.12.0
    container_name: "pinot-controller"
    depends_on:
      - zookeeper
    ports:
      - "9000:9000"
    command: "StartController -zkAddress zookeeper:2181 -dataDir /data"
    volumes:
      - ./volumes/pinot-controller_data:/data
    networks:
      analytics_network:
        ipv4_address: 172.90.1.111
    restart: unless-stopped


  pinot-broker:
    image: apachepinot/pinot:0.12.0
    container_name: "pinot-broker"
    depends_on:
      - pinot-controller
      - zookeeper
    ports:
      - "8099:8099"
    command: "StartBroker -zkAddress zookeeper:2181"
    networks:
      analytics_network:
        ipv4_address: 172.90.1.112
    restart: unless-stopped


  pinot-server:
    image: apachepinot/pinot:0.12.0
    container_name: "pinot-server"
    depends_on:
      - pinot-broker
      - zookeeper
    command: "StartServer -zkAddress zookeeper:2181 -dataDir /data"
    volumes:
      - ./volumes/pinot-server_data:/data
    networks:
      analytics_network:
        ipv4_address: 172.90.1.113
    restart: unless-stopped


  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.7.1
    depends_on:
      - kafka1
      - schema-registry
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      KAFKA_REST_LISTENERS: "http://rest-proxy:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
    networks:
      analytics_network:
        ipv4_address: 172.90.1.114
    restart: unless-stopped


  streamlit-dashboard:
    image: python:3.9-slim
    #image: aminehy/docker-streamlit-app:latest
    depends_on:
      - pinot-broker
    ports:
      - "8501:8501" 
    #command: /bin/bash -c "pip install -r /app/requirements.txt && streamlit run /app/dashboard.py"
    command: /bin/bash -c "pip install --upgrade pip && pip install -r /app/requirements.txt && streamlit run /app/dashboard.py --server.port=8501 --server.address=0.0.0.0"
    volumes:
      - ./volumes/dashboard:/app
    networks:
      analytics_network:
        ipv4_address: 172.90.1.115
    restart: unless-stopped


  mysql:
    image: mysql:8
    container_name: mysql
    depends_on:
      - kafka-connect
      - schema-registry
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: chayaphon_s
      MYSQL_DATABASE: dads6005
      MYSQL_USER: dads6005
      MYSQL_PASSWORD: dads6005
    volumes:
      - ./volumes/mysql_data:/var/lib/mysql
    networks:
      analytics_network:
        ipv4_address: 172.90.1.116
    restart: unless-stopped
    

networks:
  analytics_network:
    ipam:
      config:
        - subnet: 172.90.1.0/24